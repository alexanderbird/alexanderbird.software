
- summary: Leading Our Team Amidst A Transition
  employer: Amazon Web Services
  ongoing-since: February 2020
  role: Acting Software Development Manager
  team-size: "12"
  comments:
    - active participation in most team code reviews
    - promote technical practices like refactoring, domain driven design, and
      customer-centric design
    - managing the team's ramp-up on a neighboring system as our area of
      ownership doubles
    - coaching several engineers who are mentoring interns for the first time
    - weekly 1:1s with 10+ engineers
    - managing onboarding of 4+ engineers
  noStack: true

- summary: Enhancing AWS Service Catalog
  employer: Amazon Web Services
  duration-in-months: 15
  role: Software Development Engineer II
  comments:
    - redesign core data processing component of our system from procedural and
      error prone to highly scalable / retryable queue & lambda architecture
    - introduce pairing and mobbing to our team to accelerate knowledge/skill
      transfer and increase code quality
    - main: established contract testing on the team to
      sub:
        - reduce time to add tests for a big feature from months to days
        - increase stability of tests in the build pipeline
        - increase the percentage of testing we can do through unit tests
          (reducing iteration time from minutes to seconds)
    - led the investigation and mitigation of several customer-impacting
      operational incidents while oncall
    - established User Story Mapping on the team to make our design activities
      more customer-centric.
  team-size: "9"
  stack:
    column:
      - connection: public AWS API
      - box:
          label: internal service
          column:
            - Java 8
            - proprietary framework
            - row:
              - Lambda
              - EC2
      - connection: HTTP via SDKs
      - box:
          label: collaborators
          column:
            - row:
              - AWS Organizations
              - AWS Config
              - AWS DynamoDB
            - row:
              - AWS IAM
              - AWS SQS
              - AWS SNS
            - internal services from other teams
      - box:
         label: Infrastructure as Code
         row:
           - proprietary tools
           - AWS CloudFormation

- summary: Modifying a Legacy Application
  employer: Shareworks by Morgan Stanley
  duration-in-months: 6
  role: Sr. Developer
  comments:
    - Mob and pair programming to add features to a legacy Java application
    - Familiarized myself with a new area of code each month (every team can be assigned to work on any area of the code)
    - Story-splitting and user story mapping
    - Refactored partially tested legacy code (safely) to make it easier to change
    - Demoed weekly to clients
    - main: Took initiative to improve shared automation and tooling
      sub:
        - published a command line interface (with tab completion) to abstract,
          document, and improve common developer commands (people actually use it
          and submit PRs)
        - wrote a small Ruby on Rails tool to make test failure results easier
          to triage (still in trial/demo stage)
  team-size: "> 100"
  stack:
    column:
      - box:
          label: Web Browser
          column:
            - row:
                - HTML
                - CSS
                - JavaScript
            - various UI frameworks
      - connection: HTTP
      - box:
          label: Server
          row: 
            - Java 8
            - Oracle Database

- client: Oilfield services
  client-size: publicly traded
  summary: Real-Time Well Monitoring Dashboard 
  employer: Arcurve Inc
  team-size: 2
  duration-in-months: 4
  role: Tech Lead
  comments:
    - Led Domain Driven Design style modelling session with team (incl. user researcher, UX, and PM) to clarify the problem statement and approach
    - Prototyped experimental data visualizations with Highcharts from provided mockups
    - Setup project build & test infrastructure (using Lerna to manage the monorepo; auto-generating the Angular SDK from the API Swagger doc)
    - Built inexpensive demo infrastructure so we can deploy before the upstream integration points (external team) are available
    - Conducted job interviews
  stack:
    column:
      - box:
          label: Web Browser
          column:
           - row:
             - CSS
             - HTML
             - Highcharts
           - row:
             - Angular 7
             - TypeScript
      - row:
        - connection: HTTP
        - connection: HTTP
      - box:
          label: Docker
          column:
            - row:
              - box:
                  label: Single Page App
                  column:
                    - NGINX
              - box:
                  label: REST API
                  column:
                    - Nest
                    - TypeScript
            - row:
              - box:
                  string: Data collection & aggregation
      - connection: various protocols
      - box:
          string: Well-site sensors

- client: Corporate minutebook management
  client-size: startup
  summary: Reverse Engineering
  employer: Arcurve Inc
  team-size: 1
  duration-in-months: 5
  role: Tech Lead
  comments:
    - "Built an import utility for a proprietary data format: inferred the domain model/rules from the data, wrote a custom parser."
    - Integrated this component with our client's code
    - Provided extensive documentation and training so their development team was comfortable maintaining the import utility
    - Conducted job interviews
  stack:
    column:
      - box:
          label: Web Browser
          row:
            - CSS
            - JavaScript
            - AngularJS
      - connection: HTTP
      - box:
          label: Server
          column:
            - row:
              - Express
              - Node
            - line: true
            - row:
                - Mongo DB
                - Axios
      - row:
          - empty: true
          - connection: HTTP
      - box:
          column:
            - other services

- client: Telecommunications provider
  client-size: publicly traded
  summary: Team Lead
  employer: Arcurve Inc
  team-size: 8
  duration-in-months: 6
  role: Tech Lead
  comments:
    - Updated team processes to increase knowledge sharing and collaboration between team members
    - Identified a way to temporarily reuse legacy components in order to release sooner
    - Conducted job interviews
  stack:
    column:
      - box:
          label: Web Browser
          column:
            - row:
                - React
                - Redux
            - row:
                - CSS
                - JavaScript
      - row:
        - connection: HTTP
        - connection: HTTP
      - row:
        - box: 
            label: SPA Server
            column:
              - row:
                - Express
                - Node
              - Linux
        - box:
            label: API Server
            column:
              - C#
              - Windows
      - row:
          - AWS EC2
          - on-premise

- client: Professional certification auditing
  client-size: startup
  summary: Architected for Reuse
  employer: Arcurve Inc
  team-size: 3
  duration-in-months: 3
  role: Developer
  comments:
    - |
      Architected and unit tested the application in a way that allowed us to salvage most of the
      application when the client drastically changed their application after several months (new UI,
      new data model)
    - |
      Maintained respectful, constructive communication with our client in a challenging team
      environment
  stack:
    column:
      - row:
        - box:
            label: Web Browser
            column:
              - row:
                  - React
              - row:
                  - CSS
                  - JavaScript
        - box:
            label: iOS
            column:
              - row:
                  - React Native
              - row:
                  - JavaScript
      - connection: HTTP
      - row:
        - box:
            label: Server
            column:
              - row:
                - JavaScript
                - Cypher
              - row:
                - Node
                - Neo4j
        - box:
            label: Auth. Service
            column:
              - JavaScript
              - Node
      - row:
        - Heroku
  
- client: Video conferencing
  summary: Browser WebRTC Protocol Deep Dive
  client-size: private corporation
  employer: Arcurve Inc
  team-size: 2
  duration-in-months: 12
  role: Developer
  comments:
    - main: |
        Integrated the emerging WebRTC protocol with our client's custom video
        conferencing infrastructure via a proof-of-concept JavaScript library
      sub:
        - |
          Enabled video calling between a browser and multiple embedded and/or
          desktop clients
    - |
      Collaborated constructively and respectfully with my technical lead in
      the face of many differences of opinion
  stack:
    column:
      - box:
          label: Web Browser
          column:
            - Consumer JavaScript (3rd party)
            - box:
                label: JavaScript Library
                column:
                  - TypeScript
                  - row: 
                    - Browser WebRTC API
                    - Stanza.io (XMPP)
      - row:
          - connection: WebRTC
          - connection: WebSocket
      - row:
        - box:
            string: Selective Forwarding Unit
        - box:
            string: Signalling service (XMPP)
      - connection: various protocols
      - box:
          label: Other Clients
          row:
            - Browser
            - Desktop
            - Embedded

- client: Land acquisition service provider 
  summary: Following Patterns; Accepting Feedback
  client-size: private corporation
  employer: Arcurve Inc
  team-size: 2
  duration-in-months: 4
  role: Developer
  comments:
    - Followed patterns set by previous developers
    - |
      Collaborated through code reviews &mdash; receiving
      (accepting, adopting) feedback, discussing my approach
  stack:
    column:
      - box:
          label: Web Browser
          row:
            - CSS
            - HTML
            - Kendo UI
            - JavaScript
      - connection: HTTP
      - box:
          label: on-premise Server
          column:
            - row:
                - C#
                - .NET MVC
                - SQL
            - line: true
            - row:
                - IIS
                - Microsoft SQL Server

- client: Surplus oilfield equipment broker
  summary: Navigated Technical Debt
  client-size: startup
  employer: Arcurve Inc
  team-size: 1
  duration-in-months: 4
  role: Intern
  comments:
    - Identified and fixed several illusive bugs in a very indebted and haphazardly constructed application
    - Participated in requirements elicitation from domain experts who had little technical understanding
  stack:
    column: 
      - box:
          label: Web Browser
          row:
            - HTML
            - CSS
            - JavaScript
      - connection: HTTP
      - box:
          label: Server
          row:
            - PHP
            - MySQL
            - Apache
      - Linux (shared cloud hosting)

- client: Oilfield services
  summary: TDD & Version Control with Excel VBA
  client-size: publicly traded
  employer: Arcurve Inc
  team-size: 1
  duration-in-months: 3
  role: Intern
  comments:
    - Proposed new business process to reduce lead time for new clients by 50%
    - Modified the existing Excel VBA tool to support the new process
  stack:
    column:
      - box:
          label: Microsoft Excel VBA
          row:
            - Macros
            - Unit Tests
      - Macro Serializer (3rd party)
      - Version Control

- summary: Software Engineering Decision Support Lab
  employer: University of Calgary
  duration-in-months: 4
  role: Research Assistant
  comments:
    - Implemented a synchronization utility between JIRA and a proprietary business intelligence / project planning tool
  team-size: 2
  stack:
    column:
      - box:
          label: Web Browser
          row:
            - column:
              - CSS
              - HTML
            - column:
              - Ember.js
              - CoffeeScript
      - row:
        - connection: HTTP
        - blank: true
      - box:
          label: Heroku
          row:
            - Ruby on Rails
            - Postgres

