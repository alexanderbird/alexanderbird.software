title: Bio
subtitle: Strengths, values, and motivators

tiles:
  - motivation:
      title: People
      details: >
        How I interact with others
    strengths:
      - title: customer focussed
        body: >
          I've found the only way to build software that actually gets used is
          to work closely with our customers from the very beginning and
          throughout the work. This might mean customer interviews, watching
          them work, User Story Mapping, releasing early prototypes for
          feedback, collecting thoughtfully crafted metrics, and repeating those
          things throughout the work.
      - title: collaborative
        body: >
          I'd like to achive more than I can as a solo developer. I need the perspectives, inspiration,
          and experience of many peers to do my best so I work hard to sustain and enhance
          an environment where we can all bring our best to the table. In most teams I am
          part of I share practices like collaborative programming (ensemble/pair/mob) and
          retrospective techniques which help us spend more of our effort creating together
          and wasting less effort negotiating and coordinating with each other.
      - title: communicative
        body: >
          I apply practices like continuous integration, User Story Mapping,
          Domain Driven Design, Acceptance Test Driven Development, and Architectural Decision
          Records to facilitate cross-discipline communication early and often.
  - motivation:
      title: Process
      details: >
        How I build
    strengths:
      - title: test driven
        body: >
          Acceptance Test Driven Development at a system capability level; Test Driven Development at the class level.
          I can find ways to test drive very hard-to-test systems, either with creative testing approaches or
          strategic refactoring.
      - title: adapting to change
        body: >
          I engineer the system so it's cheap to change so we don't have to predict the future to be successful.
          That includes modular architecture, appropriate testing, and refactoring skills (practicing them personally
          and sharing them with team mates).
      - title: measuring over guessing
        body: >
          I use spikes, experiments, production metrics, and other mechanisms to compare reality to our plans so we
          know that we're building the right thing. Guesses are timeboxed and we gather data to course correct.
      - title: lean flow
        body: >
          I apply practices that reduce work in progress, queued work, unreleased inventory, and other lean waste
          we can have more impact with the same effort. I share practices like collaborative programming,
          continuous integration, small commits to help me and my peers spend more effort building/delivering
          and less effort coordinating/correcting.
  - motivation:
      title: Tech
      details: >
        What I build
    strengths:
      - title: polyglot
        body: >
          Comfortable with Java, TypeScript/JavaScript, Bash. Familiar with Ruby, C#, C++, Python, VBA.
      - title: database agnostic
        body: >
          Comfortable modelling and testing relational data with SQL and NoSQL based databases.
      - title: multi-architecture
        body: >
          Comfortable building distributed systems in the cloud, domain driven
          microservices, and modular monoliths. I prefer hexagonal architecture
          because of how easy it makes unit testing.
      - title: refactoring
        body: >
          Very comfortable with advanced refactoring methods (IDE tooling, manual provable refactorings,
          <code>test && commit || revert</code>).
      - title: learning
        body: >
          Always keen to learn a new tech stack, pattern, or approach.
      - title: oncall operator
        body: >
          Experienced as a first responder to production incidents, including emergency performance optimization,
          security incident response, and other high severity customer-impacting incidents.
